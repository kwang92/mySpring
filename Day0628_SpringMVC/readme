* Spring MVC를 위한 라이브러리 설정
 Spring core, Spring context
 jdbc, aop, Spring web, Spring webmvc
 
 
 mybatis, mybatis-spring
 ojdbc
 aspectjrt, aspectjweaver
 log4j
 
 
 Spring MVC 에서는 요청을 받고 응답하는 Servlet과 구성요소들을 포함하는
 Spring Conatiner의 역할을 Dispatcher-Servlet이 담당한다.
 
 *Dispatcher-servlet : Servlet과 Container의 역할을 동시에 한다.
 					 : Web Application에 필요한 구성요소들을 bean으로 등록해서 포함하고있다.  - web.xml에 등록
 					 
 
 *Dispatcher-servlet의 경우 Spring Container의 역할도 한다.
    : 설정파일의 기본 위치 = WEB-INF/{servlet-name}-servlet.xml
 					 
<servlet>정의에  <init-param> 추가하고
param-name , param-value 지정하여 기본경로 추가

요청기능별 또는 요청을 구분하는 모듈별로 servlet을 하나씩 작성 될 수 있다.
service, dao등 Database관련 또는 공통 기능을 가지는 객체는 공통 컨테이너에 담아서 사용한다.(root container)

* root container (Dao, Service, Datasource, 기본설정에 대한 bean으로 이루어짐)
	1. dao 사용 설정
		: root-catainer = ContextLoaderListener
		  ※리스너 : 이벤트가 발생했을 때, 동작하도록 만들어짐
		       : 웹 어플리케이션이 웹컨테이너에서 받아서 처리하는 클래스
		  
	 1) Context-LoardListener를 클래스 리스너로 등록(web.xml)